# Makefile for debian package build
# Davíð Steinn Geirsson <david@dsg.is>

PACKAGE_LIST = $(DEBIAN_BUILD_DIRS)
DIST_BUILD_DIR=/home/user
RUN_AS_USER=user

DEBIANVERSION=$(DIST)
export DEBIANVERSION

DEBIAN_DEPENDENCIES := dpkg-dev debootstrap

ifneq (,$(DEBIAN_BUILD_DIRS))
packagefile = $(shell head -n 1 $(ORIG_SRC)/debian/changelog  | awk '{print $$1, $$2}' | sed 's/\([a-zA-Z\-]*\) (\(.*\))/\1_\2/')
endif

# XXX: replace search with '.' not ':'
#listfiles = awk 'section == "Files:" { print $$5 } /^[A-Z].*:$$/ { section=$$1 }'
listfiles = awk 'section == "Files:" { print $$5 } /^[A-Z].*.$$/ { section=$$1 }'

ifdef UPDATE_REPO
ifneq (,$(findstring current-testing,$(UPDATE_REPO)))
REPO_SUFFIX = -testing
else ifneq (,$(findstring unstable,$(UPDATE_REPO)))
REPO_SUFFIX = -unstable
endif
endif

define aptdistributions
Origin: Qubes Debian
Label: Qubes Debian
Codename: wheezy
Architectures: amd64 source
Components: main
Description: Apt repository with qubes domU support tools for debian wheezy

Origin: Qubes Debian
Label: Qubes Debian
Codename: jessie
Architectures: amd64 source
Components: main
Description: Apt repository with qubes domU support tools for debian jessie
endef
export aptdistributions

dist-prepare-chroot: $(CHROOT_DIR)/home/user/.prepared_base
	@if [ $(VERBOSE) -gt 0 ]; then \
		echo "-> dist-prepare-chroot for $(DIST)"; \
		echo "-> sudo mount --bind $(BUILDER_REPO_DIR) $(CHROOT_DIR)/tmp/qubes-deb;"; \
	fi
	@if [ ! -r $(CHROOT_DIR)/proc/cpuinfo ]; then\
		sudo mount -t proc proc $(CHROOT_DIR)/proc;\
	fi
	@if ! [ -d $(CHROOT_DIR)/tmp/qubes-deb/deb ]; then\
		mkdir -p $(CHROOT_DIR)/tmp/qubes-deb;\
		sudo mount --bind $(BUILDER_REPO_DIR) $(CHROOT_DIR)/tmp/qubes-deb;\
	fi

$(CHROOT_DIR)/home/user/.prepared_base: ./prepare-chroot-debian
	# Make sure repo directory exists
	@if ! [ -d "$(PWD)/qubes-rpms-mirror-repo/$(DIST)/dists" ]; then\
	    mkdir -p "$(PWD)/qubes-rpms-mirror-repo/$(DIST)/dists";\
	fi
	@echo "-> Preparing $(DIST) build environment"
	@sudo -E ./prepare-chroot-debian $(CHROOT_DIR) $(DIST)
	@touch $(CHROOT_DIR)/home/user/.prepared_base

dist-prep:
	@if ! which rpm >/dev/null 2>&1; then \
		echo "WARNING: rpm executable not found (are you on cygwin?)"; \
	elif [ $(VERBOSE) -gt 0 ]; then \
		echo "currently installed dependencies:"; \
		rpm -q $(DEBIAN_DEPENDENCIES) || exit 1; \
	else \
		rpm -q $(DEBIAN_DEPENDENCIES) >/dev/null 2>&1 || exit 1; \
	fi

dist-build-dep:
	./update-local-repo.sh $(DIST)
	sudo chroot $(CHROOT_DIR) apt-get update
	grep Build-Depends: $(CHROOT_DIR)$(DIST_SRC)/debian/control | cut -d: -f 2- |\
		sed -e 's/ *, */\n/g'| cut -d'(' -f 1 |tr -d " " |\
		xargs sudo chroot $(CHROOT_DIR) apt-get install -y

dist-package:
ifndef PACKAGE
	$(error "PACKAGE need to be set!")
endif
	rm -f $(CHROOT_DIR)/$(DIST_SRC)/../$(packagefile)*
	rm -f $(CHROOT_DIR)/$(DIST_SRC)/deb/*/*
	rm -f $(CHROOT_DIR)/$(DIST_SRC)/rpm/*/*
	cd $(CHROOT_DIR)/$(DIST_SRC); $(PWD)/scripts-debian/debian-changelog.sh
	echo "Building package in $(DIST_SRC)"
	sudo $(CHROOT_ENV) chroot $(CHROOT_DIR) su user -c 'cd $(DIST_SRC); LC_ALL=C dpkg-buildpackage -sa -k${SIGN_KEY} --changes-option=-DDistribution=$(DIST)'

dist-copy-out:
	mkdir -p $(BUILDER_REPO_DIR)/deb
	mkdir -p $(ORIG_SRC)/deb/$(DIST)
	cd $(CHROOT_DIR)/$(DIST_SRC)/..; \
		cp -t $(BUILDER_REPO_DIR)/deb `$(listfiles) $(packagefile)*.changes`
	cp -t $(BUILDER_REPO_DIR)/deb/ $(CHROOT_DIR)/$(DIST_SRC)/../$(packagefile)*.changes
	cd $(CHROOT_DIR)/$(DIST_SRC)/..; \
		mv -t $(PWD)/$(ORIG_SRC)/deb/$(DIST)  `$(listfiles) $(packagefile)*.changes`
	mv -t $(PWD)/$(ORIG_SRC)/deb/$(DIST) $(CHROOT_DIR)/$(DIST_SRC)/../$(packagefile)*.changes

update-repo:
ifndef UPDATE_REPO
	$(error "You need to specify destination repo in UPDATE_REPO variable")
endif
ifeq (,$(DEBIAN_BUILD_DIRS))
	@true
else
	@mkdir -p $(UPDATE_REPO)/conf
	[ ! -e $(UPDATE_REPO)/conf/distributions ] && echo "$$aptdistributions" > $(UPDATE_REPO)/conf/distributions || :

	if ! [ -d $(CHROOT_DIR)/tmp/qubes-deb/deb ]; then \
		mkdir -p $(CHROOT_DIR)/tmp/qubes-deb ;\
		sudo mount --bind $(BUILDER_REPO_DIR) $(CHROOT_DIR)/tmp/qubes-deb ;\
	fi

	if ! [ -d $(CHROOT_DIR)/tmp/qubes-apt-repo/dists ]; then \
		mkdir -p $(CHROOT_DIR)/tmp/qubes-apt-repo ;\
		sudo mount --bind $(UPDATE_REPO) $(CHROOT_DIR)/tmp/qubes-apt-repo ;\
	fi

	sudo $(CHROOT_ENV) chroot $(CHROOT_DIR) su user -c "reprepro -b /tmp/qubes-apt-repo include $(DEBIANVERSION)$(REPO_SUFFIX) /tmp/qubes-deb/deb/$(packagefile)_amd64.changes" ;\
	sudo umount $(CHROOT_DIR)/tmp/qubes-apt-repo
	sudo umount $(CHROOT_DIR)/tmp/qubes-deb
endif

