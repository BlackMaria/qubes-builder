# Configuration file for qubes-builder
#
# All lines which begins with "#" are treated as comments
# Assigments can be made with VAR_NAME="VALUE" 
# IMPORTANT: no spaces around "="

# Release Repo
GIT_SUBDIR=qubes-r2

# COMPONENTS - list of Qubes components. Can be used to easily add custom
# components to build environment.
# Preferred use is:
#  - append: COMPONENTS+=something
#  - prepend: COMPONENTS=something $(COMPONENTS)
# Default: see Makefile
#COMPONENTS:=$(filter-out desktop-linux-kde desktop-linux-xfce qubes-builder,$(COMPONENTS))
COMPONENTS:=$(filter-out qubes-builder,$(COMPONENTS))
COMPONENTS+=Whonix

# DISTS_VM - distributions for VM packages (can be list - separate with space)
# Supported distros: fc15 fc17 fc18 fc19 fc20
# Windows: win7x64 win7x86 winVistax64 winVistax86 winXPx64 winXPx86
# Default: fc20
DISTS_VM ?= wheezy jessie

# TEMPLATE_FLAVOR - Set build template flavor to use on top of DIST_VM base
# Supported Debian flavors: whonix-gateway whonix-workstation
# Default: no value
TEMPLATE_FLAVOR ?=

# NO_SIGN - disable signing of builded rpms - set "1" to use it
# Default: no value
NO_SIGN="1"

# DEBUG - print verbose messages about qubes-builder itself - set "1" to use it
# Default: no value
DEBUG=1

# VERBOSE - verbosity level of build process
# 0 - print almost no messages but all build process
# 1 - print (almost) only warnings
# 2 - full output
# Default: 0
VERBOSE=2

# For Whonix only (DEBUGGING)
# Take snapshot when debootstrap is complete as well as when additional packages have
# been installed (before Whonix is run) so a snapshot can be used in place of 
# rebuilding
SNAPSHOT=1

NO_CHECK=gui-agent-linux linux-template-builder

# Personal gui-agent-linux repo
GIT_URL_gui_agent_linux = https://github.com/nrgaway/gui-agent-linux.git
BRANCH_gui_agent_linux = master

# Personal linux-template-builder repo
GIT_URL_linux_template_builder = https://github.com/nrgaway/linux-template-builder.git
BRANCH_linux_template_builder = wheezy

# Whonix repo
GIT_URL_Whonix = https://github.com/Whonix/Whonix.git
BRANCH_Whonix = 9.2

# Qubes-builder deps
DEPS = rpmdevtools rpm-build createrepo rpm-sign

# Additional for debian template
DEPS += debootstrap dpkg-dev

################################################################################
#             E X T R A   M A K E F I L E   T A R G E T S
################################################################################

# Get rid of quotes
TEMPLATE_FLAVOR := $(shell echo $(TEMPLATE_FLAVOR))
DEPS := $(shell echo $(DEPS))
DEPENDENCIES += $(DEPS)

umount:
	@DIR="$$(readlink -m .)"; \
	./scripts-debian/umount_kill.sh "$$DIR/qubes-src/" || true; \
	for DIST in $(DISTS_ALL); do \
		./scripts-debian/umount_kill.sh "$$DIR/chroot-$$DIST" || true; \
	done; \

patch::
	# XXX: debian jessie depends hack
	@grep "libxen-4.4" qubes-src/core-vchan-xen/debian/control || \
		sed -i 's/libxen-4.3/libxen-4.3 | libxen-4.4/g' qubes-src/core-vchan-xen/debian/control; \
	cp -pn scripts-debian/Makefile.whonix qubes-src/Whonix/Makefile; \

install-deps::
	@sudo yum install $(DEPS)

get-sources:: umount install-deps
	# Whonix Keyring
	# XXX: Check where this is being stored... Keyrings make sense
	@KEYRING_DIR_GIT="$$DIR/keyrings/git"; \
	export GNUPGHOME="$$(readlink -m $$KEYRING_DIR_GIT)"; \
	echo '916B8D99C38EAF5E8ADC7A2A8D66066A2EEACCDA:6:' | gpg --import-ownertrust; \
	gpg --import keys_debian/whonix-developer-patrick.asc; \
	gpg --list-keys; \
	touch "$$GNUPGHOME/pubring.gpg"; \

template-modules build:: umount patch
	# Ensure all files are owned by $USER since some .git/index
	# files seem to get changed to 'root' and results in a
	# build error when trying to hardlink to them
	@sudo chown -R $$USER "$(CURDIR)/qubes-src"; \

	# XXX:  Not sure if this is a bug or if the local user keyring
	# needs to have keys for building.  If so they are created by
	# root in the build scripts and permissions need ot be reset
	# to user.user or a build error will occur
	if [ -d ~/.gnupg ]; then
		sudo chown -R $$USER ~/.gnupg; \
	fi

	make vmm-xen-vm; \
	if [ -d ~/.gnupg ]; then
		sudo chown -R $$USER ~/.gnupg; \
	fi

	make core-vchan-xen-vm; \
	make linux-utils-vm; \
	make core-agent-linux-vm; \
	make gui-common-vm; \
	make gui-agent-linux-vm; \

template::
	@export UPDATE=false

template-update::
	@export UPDATE=true

# Does a regular clean as well as removes all prepared and created tempalte
# images and chroot-*
clean-most: umount
	@PKGDIR="$$DIR/qubes-src/linux-template-builder"; \
	if [ -d "$$PKGDIR" ] ; then \
		pushd "$$PKGDIR"; \
		sudo rm -rf prepared_images/*  || true; \
		sudo rm -rf qubeized_images/*  || true; \
		sudo rm -rf rpm/noarch/*  || true; \
		popd; \
	fi; \
	sudo rm -rf $(addprefix $$DIR/chroot-,$(DISTS_ALL)) || true; \
	#make clean || true; \
	#make clean-rpms || true;

mostlyclean:: umount clean-most clean clean-rpms

clean-all:: umount
